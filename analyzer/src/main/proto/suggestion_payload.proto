/*
 * Copyright (C) 2019 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License
 */

syntax = "proto3";

package android.tools.sizereduction.analyzer;

option java_package = "com.android.tools.sizereduction.analyzer";

// Payload that contains the extra info for the suggestion generated by the
// tool.
//
// For example, if the tool is supposed to give a list of images that should be
// converted to Webp, the filenames/paths of these files will be provided
// through this proto.
message Payload {
  oneof content {
    WebpData webp_data = 1;

    BundleSplittingData bundle_splitting_data = 2;

    UncompressedNativeLibsUsage uncompressed_native_libs_usage = 3;

    ProguardData proguard_data = 4;

    LargeFilesInBaseModule large_files_in_base_module = 5;

    LibraryForFeatureSplitUsage library_for_feature_split_usage = 6;
  }

  message WebpData {
    // Info about the file that should be converted to Webp.
    // Always set.
    FileEntryData file = 1;
  }

  // Info about how the bundle currently splits into split APKs
  message BundleSplittingData {
    // ABIs the bundle has native libraries for.
    // Must not be empty (this proto is never used to represent a bundle without
    // native libraries)
    repeated string abis = 1;
  }

  // Info about uncompressed native libraries usage
  message UncompressedNativeLibsUsage {
    // Indicates whether uncompressed native libs are not used because of old
    // version of Bundletool or simply because they are not enabled
    enum Status {
      UNSPECIFIED_STATUS = 0;
      OLD_BUNDLETOOL = 1;
      UNCOMPRESSED_NATIVE_LIBS_NOT_ENABLED = 2;
    }

    // Status of uncompressed native lib usage.
    // Always set.
    Status status = 1;
  }

  // Info about the data collected during the Proguard/R8 analysis
  message ProguardData {
    // Total (uncompressed) size of DEX code files encountered in the bundle.
    // Always set.
    int64 total_dex_size = 1;
  }

  // Info about the heaviest files found in the base module that might be a good
  // fit for a dynamic feature module.
  message LargeFilesInBaseModule {
    // Type of file exactly pointing whether it's an asset, resource or root
    // file
    enum FileType {
      // Default value, do not use
      UNKNOWN_FILE_TYPE = 0;

      ASSET = 1;

      RESOURCE = 2;

      // Files under the 'root' directory in the App Bundle
      ROOT_DIRECTORY_FILE = 3;
    }

    // Info about the single asset/resource/root file
    message FileInfo {
      // Type of the file.
      // Always set.
      FileType type = 1;

      // Relative path within the APK split in which the file ended after the
      // splits were generated from a bundle.
      // Always set.
      string final_split_apk_path = 2;

      // Uncompressed size of the bundle entry.
      // Always set.
      int64 size = 3;
    }

    // List of largest assets/resources in the bundle
    // May be empty (if there are no assets/resources in the bundle)
    repeated FileInfo files = 1;
  }

  message LibraryForFeatureSplitUsage {
    // Describes the usage of a library that is that is a potential good
    // candidate for being extracted into a feature split.
    message LibraryEligibleForFeatureSplit {
      // Identifier for the library analyzed.
      enum Library {
        // Default value, do not use.
        UNKNOWN_LIBRARY = 0;

        CARD_IO = 1;
      }

      // Status of usage: in base (where it probably shouldn't be), in a feature
      // module (where it probably should be), or just not used in the app at
      // all.
      enum LibraryUsage {
        // Default value, do not use.
        UNKNOWN_LIBRARY_USAGE = 0;

        LIBRARY_IN_BASE = 1;
        LIBRARY_IN_FEATURE_MODULES_ONLY = 2;
        LIBRARY_NOT_USED = 3;
      }

      // Identifies the library analyzed.
      // Always set.
      Library library = 1;

      // Usage status of the library.
      // Always set.
      LibraryUsage usage = 2;
    }

    repeated LibraryEligibleForFeatureSplit library_usage = 1;
  }
}

message FileEntryData {
  // Path to the file.
  // Always set.
  string file_path = 1;
}
